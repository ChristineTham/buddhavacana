<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>buddhavacana – Kaccāyana</title><link>https://christham.net/buddhavacana/tags/kacc%C4%81yana/</link><description>Recent content in Kaccāyana on buddhavacana</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 13 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://christham.net/buddhavacana/tags/kacc%C4%81yana/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: M: Overview of Kaccāyana</title><link>https://christham.net/buddhavacana/docs/palibook/kaccayana/</link><pubDate>Mon, 13 Nov 2023 00:00:00 +0000</pubDate><guid>https://christham.net/buddhavacana/docs/palibook/kaccayana/</guid><description>
&lt;div class="alert alert-primary" role="alert">
Part of &amp;ldquo;A Beginner (Non-Linguist) Guide to Learning Pali&amp;rdquo;
&lt;/div>
&lt;p>The material in this appendix is mostly drawn from a class called
&lt;a href="https://theravadastudies.org/rainy-season-research-series/#Classanchor">&lt;strong>A Short Introduction to the Kaccāyana Pali Grammar: Its Background, Techniques and Terminology&lt;/strong>&lt;/a>
taught by Aleix Ruiz-Falqués, Shan State Buddhist University, Taunggyi, Myanmar in 2020.&lt;/p>
&lt;h2 id="genesis-of-kaccāyana">Genesis of Kaccāyana&lt;/h2>
&lt;p>There are actually two components of Kaccāyana:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Kaccāyana-byājkarana&lt;/em> (circa 6th century CE) and the author is not known
(but ascribed to Mahā Kaccāyana Thera) -
this contains the concisely stated rules (called &lt;code>sutta&lt;/code>) that form the
basis of Pali grammar; and&lt;/li>
&lt;li>&lt;em>Kaccāyana-vutti&lt;/em> (circa 8th centure CE) by Saṅghanandin, which represents a
commentary and explanation of the rules together with examples.&lt;/li>
&lt;/ul>
&lt;p>Kaccāyana itself draws from multiple earlier sources such as:&lt;/p>
&lt;ul>
&lt;li>Prātiśākya treatises, Vedic phonetics (various authors)&lt;/li>
&lt;li>Pānini&amp;rsquo;s Aṣṭādhyāyī (&amp;ldquo;Eight Lessons&amp;rdquo;)&lt;/li>
&lt;li>Kātantravyākarana by Šarvavarman&lt;/li>
&lt;/ul>
&lt;p>So, Kaccāyana draws and inherits from a long tradition of Sanskrit grammar
and technical terms. According to Pind (2012) approximately 215 &lt;code>sutta&lt;/code> from
Kaccāyana are based on Kātantravyākarana, and approximately 300 &lt;code>sutta&lt;/code> are
modifications from Panini. However, more than half the &lt;code>sutta&lt;/code>
in Kaccāyana are not derived from Sanskrit, so the grammar as a whole does
not reflect Sanskrit usage and vocabulary.&lt;/p>
&lt;h2 id="kaccāyana-structure">Kaccāyana structure&lt;/h2>
&lt;pre class="mermaid">mindmap
Kaccāyana
I. Sandhi
i. Definitions
ii. Vowel sandhi
iii. Consonant sandhi
Iiv(&amp;#34;iv. niggahīta (ṃ) sandhi&amp;#34;)
v. Miscellanea
II. Nāma
i. Definitions, Internal sandhis, Default Declensions
ii. Pronominal declension, an-stems
iii. Pronominal dec. continued, mano-gaṇa, an-stems, tar-stems.
iv. an-stems cont., feminine stems, adv. pronouns, nta-stems
v. Adverbial affixes
vi. KĀRAKA
vii. SAMĀSA
viii. TADDHITA
III. Ākhyāta
i. Definitions
ii. Special stems, causatives, bhāva, vb. classes
iii. Reduplication, Special stems
iv. Special affixes and stems
IV. Kibbidhāna
i. Definition of kicca and kit affixes
ii. Use of affixes with tenses, voices, etc.
iii. niṭṭhā affixes
iv. Modification of vb. stems in primary derivation
v. UṆĀDI&lt;/pre>
&lt;h3 id="types-of-rules-in-kaccāyana">Types of rules in Kaccāyana&lt;/h3>
&lt;p>Several saññā “technical terms”, within an adhikāra “domain”, following
paribhāsā “metarules”, will be subject to vidhi “operations” in order to
derive words or sentences.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">@startebnf
grammar (* Kaccāyana *) = 675 * rule (* sutta *);
rule =
technical_term (* saññā *) |
domain (* adhikāra *) |
metarule (* paribhāsā *) |
operation (* vidhi *) ;
technical_term =
meaningful (* anvattha *) |
artificial (* rūḷhī *) ;
domain =
lion_way (* sīhagatika *) |
frog_way (* maṇḍūkagatika *) |
progressive (* yathānupubbika *) ;
metarule =
meta_definition (* saññaṅga *) |
meta_operation (* vidhyaṅga *) |
meta_other (* aññaṅga *) ;
operation =
replacement (* ādesa *) |
insertion (* āgama *) |
modification (* vikāra *) |
elision (* lopa *) |
metathesis (* viparīta *) ;
@endebnf
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">@startyaml
saññā:
- anvattha
- rūḷhī
adhikāra:
- sīhagatika
- maṇḍūkagatika
- yathānupubbika
paribhāsā:
- saññaṅga
- vidhyaṅga
- aññaṅga
vidhi:
- ādesa
- āgama
- vikāra
- lopa
- viparīta
@endyaml
&lt;/code>&lt;/pre>&lt;h3 id="how-does-a-vidhi-operation-work">How does a &lt;code>vidhi&lt;/code> (operation) work&lt;/h3>
&lt;p>Most vidhi “operational” rules teach paccaya “affixation” or ādesa “replacement” using previous definitions (saññā-s). It is all about adding particles to a base, and then replacing them if/when needed.&lt;/p>
&lt;p>To understand vidhi-s, we should keep in mind the following code of case endings:&lt;/p>
&lt;ul>
&lt;li>ABL. = “after X”&lt;/li>
&lt;li>GEN. = “instead of X”&lt;/li>
&lt;li>NOM., ACC. = “X”, ādesa (&amp;ldquo;replacement&amp;rdquo;)&lt;/li>
&lt;li>LOCATIVE1: “before X”&lt;/li>
&lt;li>LOCATIVE2: “in the sense of X”&lt;/li>
&lt;/ul>
&lt;h4 id="affixation-paccaya">Affixation (&lt;code>paccaya&lt;/code>)&lt;/h4>
&lt;pre class="mermaid">timeline
Left : Ablative
: After X
A : Nominative
: Affix A is inserted&lt;/pre>
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">@startebnf
affixation = ablative (* After X *), nominative (* A is inserted *);
ablative =
(nominal_base (* liṅga *) |
verbal_base (* dhātu *)), &amp;#34;smā&amp;#34; ;
@endebnf
&lt;/code>&lt;/pre>&lt;h4 id="replacement-ādesa">Replacement (&lt;code>ādesa&lt;/code>)&lt;/h4>
&lt;pre class="mermaid">timeline
Left : Ablative
: Ablative
: Ablative
: After X
A : Genitive
: Nominative
: Nominative
: Replace A
B : Nominative
: Nominative
: Accusative
: With B
Right : Locative
: Locative
: Locative
: Before Y
Marker : ca (and)
: api (also)
: vā (or)
: kvaci (sometimes)
: na (not)
: niccam (required)
Semantic : Locative
: &amp;#34;in the sense of ...&amp;#34;&lt;/pre>
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">@startebnf
replacement = [ablative (* After X *)],
(
(
genitive (* Instead of A *),
nominative (* replace with B *)
) |
(
nominative (* Replace A *),
nominative (* with B *)
) |
(
nominative (* A *),
accusative (* becomes B *)
)
),
[locative (* Before Y *)], [marker], [semantic (* &amp;#34;in the sense of&amp;#34; *)];
marker =
&amp;#34;ca&amp;#34; (* and *) |
&amp;#34;api&amp;#34; (* also *) |
&amp;#34;vā&amp;#34; (* or *) |
&amp;#34;kvaci&amp;#34; (* sometimes *) |
&amp;#34;na&amp;#34; (* not *) |
&amp;#34;niccam&amp;#34; (* required *) ;
@endebnf
&lt;/code>&lt;/pre>&lt;h4 id="elision-lopaṃ">Elision (&lt;code>lopaṃ&lt;/code>)&lt;/h4>
&lt;pre class="mermaid">timeline
Left : Ablative
: After X
A : Nominative
: Instead of A
lopaṃ: Accusative
: elision
Right : Locative
: Before Y&lt;/pre>
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">@startebnf
elision =
[ablative (* After X *)],
genitive (* Instead of A *),
&amp;#34;lopaṃ&amp;#34; (* elision *),
[locative (* Before Y *)];
@endebnf
&lt;/code>&lt;/pre>&lt;h3 id="structure-of-a-rule-sutta">Structure of a rule (&lt;code>sutta&lt;/code>)&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">@startebnf
rule =
aphorism (* sutta *),
gloss (* vutti *),
{example} (* udāharaṇa *),
{counter_example} (* kimudāharaṇa *),
[application] (* payojana *),
[result] (* gahaṇaphala *);
@endebnf
&lt;/code>&lt;/pre>&lt;pre class="mermaid">stateDiagram-v2
direction LR
[*] --&amp;gt; upasagga
[*] --&amp;gt; dhātu
upasagga --&amp;gt; upasagga
upasagga --&amp;gt; dhātu
dhātu --&amp;gt; paccaya&lt;/pre></description></item></channel></rss>